#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
#ifndef RKYC_IOS_SWIFT_H
#define RKYC_IOS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreMedia;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RKYC_iOS",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@class NSURLRequest;
@class OAuthAccessToken;

/// A request authenticator that can be used by Heimdallr.
SWIFT_PROTOCOL("_TtP8RKYC_iOS36HeimdallResourceRequestAuthenticator_")
@protocol HeimdallResourceRequestAuthenticator
/// Authenticates the given request.
/// \param request The request to be authenticated.
///
/// \param accessToken The access token that should be used for
/// authenticating the request.
///
///
/// returns:
/// The authenticated request.
- (NSURLRequest * _Nonnull)authenticateResourceRequest:(NSURLRequest * _Nonnull)request accessToken:(OAuthAccessToken * _Nonnull)accessToken SWIFT_WARN_UNUSED_RESULT;
@end


/// A <code>HeimdallResourceRequestAuthenticator</code> which uses the HTTP <code>Authorization</code>
/// Header to authorize a request.
SWIFT_CLASS("_TtC8RKYC_iOS59HeimdallResourceRequestAuthenticatorHTTPAuthorizationHeader")
@interface HeimdallResourceRequestAuthenticatorHTTPAuthorizationHeader : NSObject <HeimdallResourceRequestAuthenticator>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Authenticates the given request by setting the HTTP <code>Authorization</code>
/// header.
/// \param request The request to be authenticated.
///
/// \param accessToken The access token that should be used for
/// authenticating the request.
///
///
/// returns:
/// The authenticated request.
- (NSURLRequest * _Nonnull)authenticateResourceRequest:(NSURLRequest * _Nonnull)request accessToken:(OAuthAccessToken * _Nonnull)accessToken SWIFT_WARN_UNUSED_RESULT;
@end

@class NSURL;
@class OAuthClientCredentials;
@protocol OAuthAccessTokenStore;
@protocol OAuthAccessTokenParser;
@protocol HeimdallrHTTPClient;

/// The all-seeing and all-hearing guardian sentry of your application who
/// stands on the rainbow bridge network to authorize relevant requests.
SWIFT_CLASS("_TtC8RKYC_iOS9Heimdallr")
@interface Heimdallr : NSObject
/// Initializes a new client.
/// \param tokenURL The token endpoint URL.
///
/// \param credentials The OAuth client credentials. If both an identifier
/// and a secret are set, client authentication is performed via HTTP
/// Basic Authentication. Otherwise, if only an identifier is set, it is
/// encoded as parameter. Default: <code>nil</code> (unauthenticated client).
///
/// \param accessTokenStore The (persistent) access token store.
/// Default: <code>OAuthAccessTokenKeychainStore</code>.
///
/// \param accessTokenParser The access token response parser.
/// Default: <code>OAuthAccessTokenDefaultParser</code>.
///
/// \param httpClient The HTTP client that should be used for requesting
/// access tokens. Default: <code>HeimdallrHTTPClientURLSession</code>.
///
/// \param resourceRequestAuthenticator The request authenticator that is
/// used to authenticate requests. Default:
/// <code>HeimdallResourceRequestAuthenticatorHTTPAuthorizationHeader</code>.
///
///
/// returns:
/// A new client initialized with the given token endpoint URL,
/// credentials and access token store.
- (nonnull instancetype)initWithTokenURL:(NSURL * _Nonnull)tokenURL credentials:(OAuthClientCredentials * _Nullable)credentials accessTokenStore:(id <OAuthAccessTokenStore> _Nonnull)accessTokenStore accessTokenParser:(id <OAuthAccessTokenParser> _Nonnull)accessTokenParser httpClient:(id <HeimdallrHTTPClient> _Nonnull)httpClient resourceRequestAuthenticator:(id <HeimdallResourceRequestAuthenticator> _Nonnull)resourceRequestAuthenticator OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSData;
@class NSURLResponse;

/// An HTTP client that can be used by Heimdallr.
SWIFT_PROTOCOL("_TtP8RKYC_iOS19HeimdallrHTTPClient_")
@protocol HeimdallrHTTPClient
/// Sends the given request.
/// \param request The request to be sent.
///
/// \param completion A callback to invoke when the request completed.
///
- (void)sendRequest:(NSURLRequest * _Nonnull)request completion:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completion;
@end


/// An HTTP client that uses URLSession.
SWIFT_CLASS("_TtC8RKYC_iOS29HeimdallrHTTPClientURLSession")
@interface HeimdallrHTTPClientURLSession : NSObject <HeimdallrHTTPClient>
/// Sends the given request.
/// \param request The request to be sent.
///
/// \param completion A callback to invoke when the request completed.
///
- (void)sendRequest:(NSURLRequest * _Nonnull)request completion:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
@class AVCaptureFileOutput;
@class AVCaptureConnection;
@class AVCaptureMetadataOutput;
@class AVMetadataObject;
@class AVCaptureOutput;
@class NSString;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC8RKYC_iOS18HologramController")
@interface HologramController : UIViewController <AVCaptureFileOutputRecordingDelegate, AVCaptureMetadataOutputObjectsDelegate, AVCaptureVideoDataOutputSampleBufferDelegate>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillLayoutSubviews;
- (void)viewDidLayoutSubviews;
- (void)captureOutput:(AVCaptureFileOutput * _Nonnull)output didFinishRecordingToOutputFileAtURL:(NSURL * _Nonnull)outputFileURL fromConnections:(NSArray<AVCaptureConnection *> * _Nonnull)connections error:(NSError * _Nullable)error;
- (void)captureOutput:(AVCaptureMetadataOutput * _Nonnull)output didOutputMetadataObjects:(NSArray<AVMetadataObject *> * _Nonnull)metadataObjects fromConnection:(AVCaptureConnection * _Nonnull)connection;
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RKYC_iOS18LivenessController")
@interface LivenessController : UIViewController <AVCaptureFileOutputRecordingDelegate, AVCaptureMetadataOutputObjectsDelegate, AVCaptureVideoDataOutputSampleBufferDelegate>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillLayoutSubviews;
- (void)viewDidLayoutSubviews;
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
- (void)captureOutput:(AVCaptureFileOutput * _Nonnull)output didFinishRecordingToOutputFileAtURL:(NSURL * _Nonnull)outputFileURL fromConnections:(NSArray<AVCaptureConnection *> * _Nonnull)connections error:(NSError * _Nullable)error;
- (void)captureOutput:(AVCaptureMetadataOutput * _Nonnull)output didOutputMetadataObjects:(NSArray<AVMetadataObject *> * _Nonnull)metadataObjects fromConnection:(AVCaptureConnection * _Nonnull)connection;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



/// An access token is used for authorizing requests to the resource endpoint.
SWIFT_CLASS("_TtC8RKYC_iOS16OAuthAccessToken")
@interface OAuthAccessToken : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// An access token parser that can be used by Heimdallr.
SWIFT_PROTOCOL("_TtP8RKYC_iOS22OAuthAccessTokenParser_")
@protocol OAuthAccessTokenParser
- (OAuthAccessToken * _Nullable)parseWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8RKYC_iOS29OAuthAccessTokenDefaultParser")
@interface OAuthAccessTokenDefaultParser : NSObject <OAuthAccessTokenParser>
- (OAuthAccessToken * _Nullable)parseWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A (persistent) access token store.
SWIFT_PROTOCOL("_TtP8RKYC_iOS21OAuthAccessTokenStore_")
@protocol OAuthAccessTokenStore
/// Stores the given access token.
/// Given nil, it resets the currently stored access token, if any.
/// \param accessToken The access token to be stored.
///
- (void)storeAccessToken:(OAuthAccessToken * _Nullable)accessToken;
/// Retrieves the currently stored access token.
///
/// returns:
/// The currently stored access token.
- (OAuthAccessToken * _Nullable)retrieveAccessToken SWIFT_WARN_UNUSED_RESULT;
/// Stores username and password, password will be empty for most cases
- (void)storeClientInfoWithCliendId:(NSString * _Nullable)cliendId clientSecret:(NSString * _Nullable)clientSecret;
/// Retrieves the currently stored username
- (NSString * _Nullable)retrieveClientId SWIFT_WARN_UNUSED_RESULT;
/// Retrieves the currently store password
- (NSString * _Nullable)retrieveClientSecret SWIFT_WARN_UNUSED_RESULT;
@end


/// A persistent keychain-based access token store.
SWIFT_CLASS("_TtC8RKYC_iOS29OAuthAccessTokenKeychainStore")
@interface OAuthAccessTokenKeychainStore : NSObject <OAuthAccessTokenStore>
- (void)storeAccessToken:(OAuthAccessToken * _Nullable)accessToken;
- (OAuthAccessToken * _Nullable)retrieveAccessToken SWIFT_WARN_UNUSED_RESULT;
- (void)storeClientInfoWithCliendId:(NSString * _Nullable)cliendId clientSecret:(NSString * _Nullable)clientSecret;
- (NSString * _Nullable)retrieveClientId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)retrieveClientSecret SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




/// Client credentials are used for authenticating with the token endpoint.
SWIFT_CLASS("_TtC8RKYC_iOS22OAuthClientCredentials")
@interface OAuthClientCredentials : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end









@class UIColor;

@interface UITextField (SWIFT_EXTENSION(RKYC_iOS))
@property (nonatomic, strong) IBInspectable UIColor * _Nullable placeHolderColor;
@end




#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
#ifndef RKYC_IOS_SWIFT_H
#define RKYC_IOS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreMedia;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RKYC_iOS",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@class NSURLRequest;
@class OAuthAccessToken;

/// A request authenticator that can be used by Heimdallr.
SWIFT_PROTOCOL("_TtP8RKYC_iOS36HeimdallResourceRequestAuthenticator_")
@protocol HeimdallResourceRequestAuthenticator
/// Authenticates the given request.
/// \param request The request to be authenticated.
///
/// \param accessToken The access token that should be used for
/// authenticating the request.
///
///
/// returns:
/// The authenticated request.
- (NSURLRequest * _Nonnull)authenticateResourceRequest:(NSURLRequest * _Nonnull)request accessToken:(OAuthAccessToken * _Nonnull)accessToken SWIFT_WARN_UNUSED_RESULT;
@end


/// A <code>HeimdallResourceRequestAuthenticator</code> which uses the HTTP <code>Authorization</code>
/// Header to authorize a request.
SWIFT_CLASS("_TtC8RKYC_iOS59HeimdallResourceRequestAuthenticatorHTTPAuthorizationHeader")
@interface HeimdallResourceRequestAuthenticatorHTTPAuthorizationHeader : NSObject <HeimdallResourceRequestAuthenticator>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Authenticates the given request by setting the HTTP <code>Authorization</code>
/// header.
/// \param request The request to be authenticated.
///
/// \param accessToken The access token that should be used for
/// authenticating the request.
///
///
/// returns:
/// The authenticated request.
- (NSURLRequest * _Nonnull)authenticateResourceRequest:(NSURLRequest * _Nonnull)request accessToken:(OAuthAccessToken * _Nonnull)accessToken SWIFT_WARN_UNUSED_RESULT;
@end

@class NSURL;
@class OAuthClientCredentials;
@protocol OAuthAccessTokenStore;
@protocol OAuthAccessTokenParser;
@protocol HeimdallrHTTPClient;

/// The all-seeing and all-hearing guardian sentry of your application who
/// stands on the rainbow bridge network to authorize relevant requests.
SWIFT_CLASS("_TtC8RKYC_iOS9Heimdallr")
@interface Heimdallr : NSObject
/// Initializes a new client.
/// \param tokenURL The token endpoint URL.
///
/// \param credentials The OAuth client credentials. If both an identifier
/// and a secret are set, client authentication is performed via HTTP
/// Basic Authentication. Otherwise, if only an identifier is set, it is
/// encoded as parameter. Default: <code>nil</code> (unauthenticated client).
///
/// \param accessTokenStore The (persistent) access token store.
/// Default: <code>OAuthAccessTokenKeychainStore</code>.
///
/// \param accessTokenParser The access token response parser.
/// Default: <code>OAuthAccessTokenDefaultParser</code>.
///
/// \param httpClient The HTTP client that should be used for requesting
/// access tokens. Default: <code>HeimdallrHTTPClientURLSession</code>.
///
/// \param resourceRequestAuthenticator The request authenticator that is
/// used to authenticate requests. Default:
/// <code>HeimdallResourceRequestAuthenticatorHTTPAuthorizationHeader</code>.
///
///
/// returns:
/// A new client initialized with the given token endpoint URL,
/// credentials and access token store.
- (nonnull instancetype)initWithTokenURL:(NSURL * _Nonnull)tokenURL credentials:(OAuthClientCredentials * _Nullable)credentials accessTokenStore:(id <OAuthAccessTokenStore> _Nonnull)accessTokenStore accessTokenParser:(id <OAuthAccessTokenParser> _Nonnull)accessTokenParser httpClient:(id <HeimdallrHTTPClient> _Nonnull)httpClient resourceRequestAuthenticator:(id <HeimdallResourceRequestAuthenticator> _Nonnull)resourceRequestAuthenticator OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSData;
@class NSURLResponse;

/// An HTTP client that can be used by Heimdallr.
SWIFT_PROTOCOL("_TtP8RKYC_iOS19HeimdallrHTTPClient_")
@protocol HeimdallrHTTPClient
/// Sends the given request.
/// \param request The request to be sent.
///
/// \param completion A callback to invoke when the request completed.
///
- (void)sendRequest:(NSURLRequest * _Nonnull)request completion:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completion;
@end


/// An HTTP client that uses URLSession.
SWIFT_CLASS("_TtC8RKYC_iOS29HeimdallrHTTPClientURLSession")
@interface HeimdallrHTTPClientURLSession : NSObject <HeimdallrHTTPClient>
/// Sends the given request.
/// \param request The request to be sent.
///
/// \param completion A callback to invoke when the request completed.
///
- (void)sendRequest:(NSURLRequest * _Nonnull)request completion:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
@class AVCaptureFileOutput;
@class AVCaptureConnection;
@class AVCaptureMetadataOutput;
@class AVMetadataObject;
@class AVCaptureOutput;
@class NSString;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC8RKYC_iOS18HologramController")
@interface HologramController : UIViewController <AVCaptureFileOutputRecordingDelegate, AVCaptureMetadataOutputObjectsDelegate, AVCaptureVideoDataOutputSampleBufferDelegate>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillLayoutSubviews;
- (void)viewDidLayoutSubviews;
- (void)captureOutput:(AVCaptureFileOutput * _Nonnull)output didFinishRecordingToOutputFileAtURL:(NSURL * _Nonnull)outputFileURL fromConnections:(NSArray<AVCaptureConnection *> * _Nonnull)connections error:(NSError * _Nullable)error;
- (void)captureOutput:(AVCaptureMetadataOutput * _Nonnull)output didOutputMetadataObjects:(NSArray<AVMetadataObject *> * _Nonnull)metadataObjects fromConnection:(AVCaptureConnection * _Nonnull)connection;
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RKYC_iOS18LivenessController")
@interface LivenessController : UIViewController <AVCaptureFileOutputRecordingDelegate, AVCaptureMetadataOutputObjectsDelegate, AVCaptureVideoDataOutputSampleBufferDelegate>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillLayoutSubviews;
- (void)viewDidLayoutSubviews;
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
- (void)captureOutput:(AVCaptureFileOutput * _Nonnull)output didFinishRecordingToOutputFileAtURL:(NSURL * _Nonnull)outputFileURL fromConnections:(NSArray<AVCaptureConnection *> * _Nonnull)connections error:(NSError * _Nullable)error;
- (void)captureOutput:(AVCaptureMetadataOutput * _Nonnull)output didOutputMetadataObjects:(NSArray<AVMetadataObject *> * _Nonnull)metadataObjects fromConnection:(AVCaptureConnection * _Nonnull)connection;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



/// An access token is used for authorizing requests to the resource endpoint.
SWIFT_CLASS("_TtC8RKYC_iOS16OAuthAccessToken")
@interface OAuthAccessToken : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// An access token parser that can be used by Heimdallr.
SWIFT_PROTOCOL("_TtP8RKYC_iOS22OAuthAccessTokenParser_")
@protocol OAuthAccessTokenParser
- (OAuthAccessToken * _Nullable)parseWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8RKYC_iOS29OAuthAccessTokenDefaultParser")
@interface OAuthAccessTokenDefaultParser : NSObject <OAuthAccessTokenParser>
- (OAuthAccessToken * _Nullable)parseWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A (persistent) access token store.
SWIFT_PROTOCOL("_TtP8RKYC_iOS21OAuthAccessTokenStore_")
@protocol OAuthAccessTokenStore
/// Stores the given access token.
/// Given nil, it resets the currently stored access token, if any.
/// \param accessToken The access token to be stored.
///
- (void)storeAccessToken:(OAuthAccessToken * _Nullable)accessToken;
/// Retrieves the currently stored access token.
///
/// returns:
/// The currently stored access token.
- (OAuthAccessToken * _Nullable)retrieveAccessToken SWIFT_WARN_UNUSED_RESULT;
/// Stores username and password, password will be empty for most cases
- (void)storeClientInfoWithCliendId:(NSString * _Nullable)cliendId clientSecret:(NSString * _Nullable)clientSecret;
/// Retrieves the currently stored username
- (NSString * _Nullable)retrieveClientId SWIFT_WARN_UNUSED_RESULT;
/// Retrieves the currently store password
- (NSString * _Nullable)retrieveClientSecret SWIFT_WARN_UNUSED_RESULT;
@end


/// A persistent keychain-based access token store.
SWIFT_CLASS("_TtC8RKYC_iOS29OAuthAccessTokenKeychainStore")
@interface OAuthAccessTokenKeychainStore : NSObject <OAuthAccessTokenStore>
- (void)storeAccessToken:(OAuthAccessToken * _Nullable)accessToken;
- (OAuthAccessToken * _Nullable)retrieveAccessToken SWIFT_WARN_UNUSED_RESULT;
- (void)storeClientInfoWithCliendId:(NSString * _Nullable)cliendId clientSecret:(NSString * _Nullable)clientSecret;
- (NSString * _Nullable)retrieveClientId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)retrieveClientSecret SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




/// Client credentials are used for authenticating with the token endpoint.
SWIFT_CLASS("_TtC8RKYC_iOS22OAuthClientCredentials")
@interface OAuthClientCredentials : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end









@class UIColor;

@interface UITextField (SWIFT_EXTENSION(RKYC_iOS))
@property (nonatomic, strong) IBInspectable UIColor * _Nullable placeHolderColor;
@end




#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
